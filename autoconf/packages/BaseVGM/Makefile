# Makefile.in generated by automake 1.11.1 from Makefile.am.
# packages/BaseVGM/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# $Id$

# This file is part of the Autoconf build mechanism for the
# Virtual Geometry Model
# Copyright (C) 2007, Brett Viren
# All rights reserved.
# 
# For the licensing terms see vgm/LICENSE.
# Contact: bv@bnl.gov



pkgdatadir = $(datadir)/vgm-autoconf
pkgincludedir = $(includedir)/vgm-autoconf
pkglibdir = $(libdir)/vgm-autoconf
pkglibexecdir = $(libexecdir)/vgm-autoconf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = packages/BaseVGM
DIST_COMMON = $(basevgmcominc_HEADERS) $(basevgmmatinc_HEADERS) \
	$(basevgmsolinc_HEADERS) $(basevgmvolinc_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/acmacros/util.m4 $(top_srcdir)/acmacros/clhep.m4 \
	$(top_srcdir)/acmacros/xerces.m4 \
	$(top_srcdir)/acmacros/geant4.m4 \
	$(top_srcdir)/acmacros/root.m4 \
	$(top_srcdir)/acmacros/vgm_build.m4 \
	$(top_srcdir)/acmacros/pedantic.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(basevgmcomincdir)" \
	"$(DESTDIR)$(basevgmmatincdir)" \
	"$(DESTDIR)$(basevgmsolincdir)" \
	"$(DESTDIR)$(basevgmvolincdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libBaseVGM_la_LIBADD =
am_libBaseVGM_la_OBJECTS = utilities.lo VMaterialFactory.lo VMedium.lo \
	element.lo isotope.lo material.lo VArb8.lo VBooleanSolid.lo \
	VBox.lo VCons.lo VCtubs.lo VDisplacedSolid.lo VEllipsoid.lo \
	VEllipticalTube.lo VExtrudedSolid.lo VHype.lo VPara.lo \
	VParaboloid.lo VPolycone.lo VPolyhedra.lo VSphere.lo \
	VTessellatedSolid.lo VTorus.lo VTrap.lo VTrd.lo VTubs.lo \
	solid.lo VFactory.lo VPlacement.lo VVolume.lo
libBaseVGM_la_OBJECTS = $(am_libBaseVGM_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libBaseVGM_la_SOURCES)
DIST_SOURCES = $(libBaseVGM_la_SOURCES)
HEADERS = $(basevgmcominc_HEADERS) $(basevgmmatinc_HEADERS) \
	$(basevgmsolinc_HEADERS) $(basevgmvolinc_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /work/projects/vgm/new/vgm/autoconf/missing --run aclocal-1.11
AMTAR = ${SHELL} /work/projects/vgm/new/vgm/autoconf/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /work/projects/vgm/new/vgm/autoconf/missing --run autoconf
AUTOHEADER = ${SHELL} /work/projects/vgm/new/vgm/autoconf/missing --run autoheader
AUTOMAKE = ${SHELL} /work/projects/vgm/new/vgm/autoconf/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLHEP_ENABLE = yes
CLHEP_INCLUDE = -I/work/packages/clhep/2.1.0.1/include
CLHEP_LINK = -Wl,-rpath -Wl,/work/packages/clhep/2.1.0.1/lib -L/work/packages/clhep/2.1.0.1/lib -lCLHEP
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -pedantic -ansi -Wno-long-long
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GEANT4_ENABLE = yes
GEANT4_INCLUDE = -I/work/projects/vgm/new/geant4/include
GEANT4_LINK = -Wl,-rpath -Wl,/work/projects/vgm/new/geant4/lib/Linux-g++ -L/work/projects/vgm/new/geant4/lib/Linux-g++ -lG4error_propagation -lG4gdml -lG4mctruth -lG4readout -lG3toG4 -lG4phys_lists -lG4gflash -lG4phys_builders -lG4GMocren -lG4geomtext -lG4biasing -lG4visHepRep -lG4brep -lG4FR -lG4OpenGL -lG4OpenInventor -lG4RayTracer -lG4Tree -lG4VRML -lG4decay -lG4UIbasic -lG4UIGAG -lG4UIcommon -lG4emadjoint -lG4visXXX -lG4empii -lG4emhighenergy -lG4partadj -lG4hadronic_radioactivedecay -lG4vis_management -lG4empolar -lG4hadronic_binary -lG4partutils -lG4emlowenergy -lG4xrays -lG4run -lG4hadronic_coherent_elastic -lG4scoring -lG4hadronic_interface_ci -lG4hadronic_abrasion -lG4hadronic_bert_cascade -lG4hadronic_qmd -lG4hadronic_hetcpp_evaporation -lG4hadronic_proc_ci -lG4had_muon_nuclear -lG4transportation -lG4hadronic_proc -lG4hadronic_em_dissociation -lG4hadronic_stop -lG4hadronic_hetcpp_utils -lG4hadronic_mgt -lG4hadronic_fragm_ci -lG4had_theo_max -lG4hadronic_ablation -lG4hadronic_crosec_ci -lG4hadronic_iso -lG4hadronic_incl_cascade -lG4had_preequ_exciton -lG4optical -lG4hadronic_deex_handler -lG4had_lll_fis -lG4parameterisation -lG4had_neu_hp -lG4hadronic_deex_evaporation -lG4had_string_diff -lG4hadronic_deex_gem_evaporation -lG4muons -lG4hadronic_deex_fission -lG4hadronic_HE -lG4hadronic_deex_photon_evaporation -lG4hadronic_deex_fermi_breakup -lG4had_string_frag -lG4emstandard -lG4hadronic_qgstring -lG4had_string_man -lG4had_im_r_matrix -lG4hadronic_deex_management -lG4hadronic_LE -lG4shortlived -lG4hadronic_RPG -lG4hadronic_deex_util -lG4hadronic_body_ci -lG4hadronic_xsect -lG4hadronic_deex_multifragmentation -lG4had_mod_util -lG4had_mod_man -lG4hadronic_util -lG4modeling -lG4geomBoolean -lG4detutils -lG4geomdivision -lG4mesons -lG4detscorer -lG4event -lG4geombias -lG4tracking -lG4detector -lG4emutils -lG4bosons -lG4ions -lG4baryons -lG4leptons -lG4digits -lG4cuts -lG4procman -lG4navigation -lG4volumes -lG4track -lG4gl2ps -lG4hits -lG4magneticfield -lG4partman -lG4specsolids -lG4csg -lG4hepnumerics -lG4geometrymng -lG4materials -lG4graphics_reps -lG4intercoms -lG4globman 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /work/projects/vgm/new/vgm/autoconf/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = vgm-autoconf
PACKAGE_BUGREPORT = bv@bnl.gov
PACKAGE_NAME = vgm-autoconf
PACKAGE_STRING = vgm-autoconf 0.2
PACKAGE_TARNAME = vgm-autoconf
PACKAGE_URL = 
PACKAGE_VERSION = 0.2
PATH_SEPARATOR = :
RANLIB = ranlib
ROOTAUXCFLAGS = -pthread -m64
ROOTAUXLIBS = -pthread -lm -ldl -rdynamic
ROOTCFLAGS = -I/work/projects/vgm/new/root/include
ROOTCINT = /work/projects/vgm/new/root/bin/rootcint
ROOTCONF = /work/projects/vgm/new/root/bin/root-config
ROOTEXEC = /work/projects/vgm/new/root/bin/root
ROOTGLIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lGui
ROOTINCDIR = /work/projects/vgm/new/root/include
ROOTLIBDIR = /work/projects/vgm/new/root/lib
ROOTLIBS = -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread
ROOTRPATH = /work/projects/vgm/new/root/lib
ROOTSOVERSION = 5.28
ROOTVERSION = 5.28/00
ROOT_ENABLE = yes
ROOT_INCLUDE = -I/work/projects/vgm/new/root/include
ROOT_LINK = -Wl,--rpath -Wl,/work/projects/vgm/new/root/lib -L/work/projects/vgm/new/root/lib -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lGeom
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.2
VGM_PACKAGES = VGM ClhepVGM BaseVGM Geant4GM RootGM XmlVGM
XERCES_ENABLE = yes
XERCES_INCLUDE = 
XERCES_LINK = -lxerces-c
abs_builddir = /work/projects/vgm/new/vgm/autoconf/packages/BaseVGM
abs_srcdir = /work/projects/vgm/new/vgm/autoconf/packages/BaseVGM
abs_top_builddir = /work/projects/vgm/new/vgm/autoconf
abs_top_srcdir = /work/projects/vgm/new/vgm/autoconf
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /work/projects/vgm/new/vgm/autoconf/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /work/projects/vgm/autoconf/vgm_built
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INCLUDES = ${CLHEP_INCLUDE} \
         -I../../../packages/VGM/include \
         -I../../../packages/BaseVGM/include 

basevgmsrc = ../../../packages/BaseVGM/source
lib_LTLIBRARIES = libBaseVGM.la
libBaseVGM_la_SOURCES = \
	$(basevgmsrc)/common/utilities.cxx \
	$(basevgmsrc)/materials/VMaterialFactory.cxx \
	$(basevgmsrc)/materials/VMedium.cxx \
	$(basevgmsrc)/materials/element.cxx \
	$(basevgmsrc)/materials/isotope.cxx \
	$(basevgmsrc)/materials/material.cxx \
	$(basevgmsrc)/solids/VArb8.cxx \
	$(basevgmsrc)/solids/VBooleanSolid.cxx \
	$(basevgmsrc)/solids/VBox.cxx \
	$(basevgmsrc)/solids/VCons.cxx \
	$(basevgmsrc)/solids/VCtubs.cxx \
	$(basevgmsrc)/solids/VDisplacedSolid.cxx \
	$(basevgmsrc)/solids/VEllipsoid.cxx \
	$(basevgmsrc)/solids/VEllipticalTube.cxx \
	$(basevgmsrc)/solids/VExtrudedSolid.cxx \
	$(basevgmsrc)/solids/VHype.cxx \
	$(basevgmsrc)/solids/VPara.cxx \
	$(basevgmsrc)/solids/VParaboloid.cxx \
	$(basevgmsrc)/solids/VPolycone.cxx \
	$(basevgmsrc)/solids/VPolyhedra.cxx \
	$(basevgmsrc)/solids/VSphere.cxx \
	$(basevgmsrc)/solids/VTessellatedSolid.cxx \
	$(basevgmsrc)/solids/VTorus.cxx \
	$(basevgmsrc)/solids/VTrap.cxx \
	$(basevgmsrc)/solids/VTrd.cxx \
	$(basevgmsrc)/solids/VTubs.cxx \
	$(basevgmsrc)/solids/solid.cxx \
	$(basevgmsrc)/volumes/VFactory.cxx \
	$(basevgmsrc)/volumes/VPlacement.cxx \
	$(basevgmsrc)/volumes/VVolume.cxx 

basevgminc = ../../../packages/BaseVGM/include/BaseVGM
basevgmcomincdir = $(includedir)/BaseVGM/common
basevgmcominc_HEADERS = \
	$(basevgminc)/common/utilities.h

basevgmmatincdir = $(includedir)/BaseVGM/materials
basevgmmatinc_HEADERS = \
	$(basevgminc)/materials/VMaterialFactory.h \
	$(basevgminc)/materials/VMedium.h

basevgmsolincdir = $(includedir)/BaseVGM/solids
basevgmsolinc_HEADERS = \
	$(basevgminc)/solids/VArb8.h \
	$(basevgminc)/solids/VBooleanSolid.h \
	$(basevgminc)/solids/VBox.h \
	$(basevgminc)/solids/VCons.h \
	$(basevgminc)/solids/VCtubs.h \
	$(basevgminc)/solids/VDisplacedSolid.h \
	$(basevgminc)/solids/VEllipsoid.h \
	$(basevgminc)/solids/VEllipticalTube.h \
	$(basevgminc)/solids/VExtrudedSolid.h \
	$(basevgminc)/solids/VHype.h \
	$(basevgminc)/solids/VPara.h \
	$(basevgminc)/solids/VParaboloid.h \
	$(basevgminc)/solids/VPolycone.h \
	$(basevgminc)/solids/VPolyhedra.h \
	$(basevgminc)/solids/VSphere.h \
	$(basevgminc)/solids/VTessellatedSolid.h \
	$(basevgminc)/solids/VTorus.h \
	$(basevgminc)/solids/VTrap.h \
	$(basevgminc)/solids/VTrd.h \
	$(basevgminc)/solids/VTubs.h

basevgmvolincdir = $(includedir)/BaseVGM/volumes
basevgmvolinc_HEADERS = \
	$(basevgminc)/volumes/VFactory.h \
	$(basevgminc)/volumes/VPlacement.h \
	$(basevgminc)/volumes/VVolume.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu packages/BaseVGM/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu packages/BaseVGM/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libBaseVGM.la: $(libBaseVGM_la_OBJECTS) $(libBaseVGM_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libBaseVGM_la_OBJECTS) $(libBaseVGM_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/VArb8.Plo
include ./$(DEPDIR)/VBooleanSolid.Plo
include ./$(DEPDIR)/VBox.Plo
include ./$(DEPDIR)/VCons.Plo
include ./$(DEPDIR)/VCtubs.Plo
include ./$(DEPDIR)/VDisplacedSolid.Plo
include ./$(DEPDIR)/VEllipsoid.Plo
include ./$(DEPDIR)/VEllipticalTube.Plo
include ./$(DEPDIR)/VExtrudedSolid.Plo
include ./$(DEPDIR)/VFactory.Plo
include ./$(DEPDIR)/VHype.Plo
include ./$(DEPDIR)/VMaterialFactory.Plo
include ./$(DEPDIR)/VMedium.Plo
include ./$(DEPDIR)/VPara.Plo
include ./$(DEPDIR)/VParaboloid.Plo
include ./$(DEPDIR)/VPlacement.Plo
include ./$(DEPDIR)/VPolycone.Plo
include ./$(DEPDIR)/VPolyhedra.Plo
include ./$(DEPDIR)/VSphere.Plo
include ./$(DEPDIR)/VTessellatedSolid.Plo
include ./$(DEPDIR)/VTorus.Plo
include ./$(DEPDIR)/VTrap.Plo
include ./$(DEPDIR)/VTrd.Plo
include ./$(DEPDIR)/VTubs.Plo
include ./$(DEPDIR)/VVolume.Plo
include ./$(DEPDIR)/element.Plo
include ./$(DEPDIR)/isotope.Plo
include ./$(DEPDIR)/material.Plo
include ./$(DEPDIR)/solid.Plo
include ./$(DEPDIR)/utilities.Plo

.cxx.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

utilities.lo: $(basevgmsrc)/common/utilities.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT utilities.lo -MD -MP -MF $(DEPDIR)/utilities.Tpo -c -o utilities.lo `test -f '$(basevgmsrc)/common/utilities.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/common/utilities.cxx
	$(am__mv) $(DEPDIR)/utilities.Tpo $(DEPDIR)/utilities.Plo
#	source='$(basevgmsrc)/common/utilities.cxx' object='utilities.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o utilities.lo `test -f '$(basevgmsrc)/common/utilities.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/common/utilities.cxx

VMaterialFactory.lo: $(basevgmsrc)/materials/VMaterialFactory.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VMaterialFactory.lo -MD -MP -MF $(DEPDIR)/VMaterialFactory.Tpo -c -o VMaterialFactory.lo `test -f '$(basevgmsrc)/materials/VMaterialFactory.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/VMaterialFactory.cxx
	$(am__mv) $(DEPDIR)/VMaterialFactory.Tpo $(DEPDIR)/VMaterialFactory.Plo
#	source='$(basevgmsrc)/materials/VMaterialFactory.cxx' object='VMaterialFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMaterialFactory.lo `test -f '$(basevgmsrc)/materials/VMaterialFactory.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/VMaterialFactory.cxx

VMedium.lo: $(basevgmsrc)/materials/VMedium.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VMedium.lo -MD -MP -MF $(DEPDIR)/VMedium.Tpo -c -o VMedium.lo `test -f '$(basevgmsrc)/materials/VMedium.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/VMedium.cxx
	$(am__mv) $(DEPDIR)/VMedium.Tpo $(DEPDIR)/VMedium.Plo
#	source='$(basevgmsrc)/materials/VMedium.cxx' object='VMedium.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMedium.lo `test -f '$(basevgmsrc)/materials/VMedium.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/VMedium.cxx

element.lo: $(basevgmsrc)/materials/element.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT element.lo -MD -MP -MF $(DEPDIR)/element.Tpo -c -o element.lo `test -f '$(basevgmsrc)/materials/element.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/element.cxx
	$(am__mv) $(DEPDIR)/element.Tpo $(DEPDIR)/element.Plo
#	source='$(basevgmsrc)/materials/element.cxx' object='element.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o element.lo `test -f '$(basevgmsrc)/materials/element.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/element.cxx

isotope.lo: $(basevgmsrc)/materials/isotope.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT isotope.lo -MD -MP -MF $(DEPDIR)/isotope.Tpo -c -o isotope.lo `test -f '$(basevgmsrc)/materials/isotope.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/isotope.cxx
	$(am__mv) $(DEPDIR)/isotope.Tpo $(DEPDIR)/isotope.Plo
#	source='$(basevgmsrc)/materials/isotope.cxx' object='isotope.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o isotope.lo `test -f '$(basevgmsrc)/materials/isotope.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/isotope.cxx

material.lo: $(basevgmsrc)/materials/material.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT material.lo -MD -MP -MF $(DEPDIR)/material.Tpo -c -o material.lo `test -f '$(basevgmsrc)/materials/material.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/material.cxx
	$(am__mv) $(DEPDIR)/material.Tpo $(DEPDIR)/material.Plo
#	source='$(basevgmsrc)/materials/material.cxx' object='material.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o material.lo `test -f '$(basevgmsrc)/materials/material.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/materials/material.cxx

VArb8.lo: $(basevgmsrc)/solids/VArb8.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VArb8.lo -MD -MP -MF $(DEPDIR)/VArb8.Tpo -c -o VArb8.lo `test -f '$(basevgmsrc)/solids/VArb8.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VArb8.cxx
	$(am__mv) $(DEPDIR)/VArb8.Tpo $(DEPDIR)/VArb8.Plo
#	source='$(basevgmsrc)/solids/VArb8.cxx' object='VArb8.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VArb8.lo `test -f '$(basevgmsrc)/solids/VArb8.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VArb8.cxx

VBooleanSolid.lo: $(basevgmsrc)/solids/VBooleanSolid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VBooleanSolid.lo -MD -MP -MF $(DEPDIR)/VBooleanSolid.Tpo -c -o VBooleanSolid.lo `test -f '$(basevgmsrc)/solids/VBooleanSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VBooleanSolid.cxx
	$(am__mv) $(DEPDIR)/VBooleanSolid.Tpo $(DEPDIR)/VBooleanSolid.Plo
#	source='$(basevgmsrc)/solids/VBooleanSolid.cxx' object='VBooleanSolid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VBooleanSolid.lo `test -f '$(basevgmsrc)/solids/VBooleanSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VBooleanSolid.cxx

VBox.lo: $(basevgmsrc)/solids/VBox.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VBox.lo -MD -MP -MF $(DEPDIR)/VBox.Tpo -c -o VBox.lo `test -f '$(basevgmsrc)/solids/VBox.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VBox.cxx
	$(am__mv) $(DEPDIR)/VBox.Tpo $(DEPDIR)/VBox.Plo
#	source='$(basevgmsrc)/solids/VBox.cxx' object='VBox.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VBox.lo `test -f '$(basevgmsrc)/solids/VBox.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VBox.cxx

VCons.lo: $(basevgmsrc)/solids/VCons.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VCons.lo -MD -MP -MF $(DEPDIR)/VCons.Tpo -c -o VCons.lo `test -f '$(basevgmsrc)/solids/VCons.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VCons.cxx
	$(am__mv) $(DEPDIR)/VCons.Tpo $(DEPDIR)/VCons.Plo
#	source='$(basevgmsrc)/solids/VCons.cxx' object='VCons.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VCons.lo `test -f '$(basevgmsrc)/solids/VCons.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VCons.cxx

VCtubs.lo: $(basevgmsrc)/solids/VCtubs.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VCtubs.lo -MD -MP -MF $(DEPDIR)/VCtubs.Tpo -c -o VCtubs.lo `test -f '$(basevgmsrc)/solids/VCtubs.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VCtubs.cxx
	$(am__mv) $(DEPDIR)/VCtubs.Tpo $(DEPDIR)/VCtubs.Plo
#	source='$(basevgmsrc)/solids/VCtubs.cxx' object='VCtubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VCtubs.lo `test -f '$(basevgmsrc)/solids/VCtubs.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VCtubs.cxx

VDisplacedSolid.lo: $(basevgmsrc)/solids/VDisplacedSolid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VDisplacedSolid.lo -MD -MP -MF $(DEPDIR)/VDisplacedSolid.Tpo -c -o VDisplacedSolid.lo `test -f '$(basevgmsrc)/solids/VDisplacedSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VDisplacedSolid.cxx
	$(am__mv) $(DEPDIR)/VDisplacedSolid.Tpo $(DEPDIR)/VDisplacedSolid.Plo
#	source='$(basevgmsrc)/solids/VDisplacedSolid.cxx' object='VDisplacedSolid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VDisplacedSolid.lo `test -f '$(basevgmsrc)/solids/VDisplacedSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VDisplacedSolid.cxx

VEllipsoid.lo: $(basevgmsrc)/solids/VEllipsoid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VEllipsoid.lo -MD -MP -MF $(DEPDIR)/VEllipsoid.Tpo -c -o VEllipsoid.lo `test -f '$(basevgmsrc)/solids/VEllipsoid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VEllipsoid.cxx
	$(am__mv) $(DEPDIR)/VEllipsoid.Tpo $(DEPDIR)/VEllipsoid.Plo
#	source='$(basevgmsrc)/solids/VEllipsoid.cxx' object='VEllipsoid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VEllipsoid.lo `test -f '$(basevgmsrc)/solids/VEllipsoid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VEllipsoid.cxx

VEllipticalTube.lo: $(basevgmsrc)/solids/VEllipticalTube.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VEllipticalTube.lo -MD -MP -MF $(DEPDIR)/VEllipticalTube.Tpo -c -o VEllipticalTube.lo `test -f '$(basevgmsrc)/solids/VEllipticalTube.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VEllipticalTube.cxx
	$(am__mv) $(DEPDIR)/VEllipticalTube.Tpo $(DEPDIR)/VEllipticalTube.Plo
#	source='$(basevgmsrc)/solids/VEllipticalTube.cxx' object='VEllipticalTube.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VEllipticalTube.lo `test -f '$(basevgmsrc)/solids/VEllipticalTube.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VEllipticalTube.cxx

VExtrudedSolid.lo: $(basevgmsrc)/solids/VExtrudedSolid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VExtrudedSolid.lo -MD -MP -MF $(DEPDIR)/VExtrudedSolid.Tpo -c -o VExtrudedSolid.lo `test -f '$(basevgmsrc)/solids/VExtrudedSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VExtrudedSolid.cxx
	$(am__mv) $(DEPDIR)/VExtrudedSolid.Tpo $(DEPDIR)/VExtrudedSolid.Plo
#	source='$(basevgmsrc)/solids/VExtrudedSolid.cxx' object='VExtrudedSolid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VExtrudedSolid.lo `test -f '$(basevgmsrc)/solids/VExtrudedSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VExtrudedSolid.cxx

VHype.lo: $(basevgmsrc)/solids/VHype.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VHype.lo -MD -MP -MF $(DEPDIR)/VHype.Tpo -c -o VHype.lo `test -f '$(basevgmsrc)/solids/VHype.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VHype.cxx
	$(am__mv) $(DEPDIR)/VHype.Tpo $(DEPDIR)/VHype.Plo
#	source='$(basevgmsrc)/solids/VHype.cxx' object='VHype.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VHype.lo `test -f '$(basevgmsrc)/solids/VHype.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VHype.cxx

VPara.lo: $(basevgmsrc)/solids/VPara.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VPara.lo -MD -MP -MF $(DEPDIR)/VPara.Tpo -c -o VPara.lo `test -f '$(basevgmsrc)/solids/VPara.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VPara.cxx
	$(am__mv) $(DEPDIR)/VPara.Tpo $(DEPDIR)/VPara.Plo
#	source='$(basevgmsrc)/solids/VPara.cxx' object='VPara.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VPara.lo `test -f '$(basevgmsrc)/solids/VPara.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VPara.cxx

VParaboloid.lo: $(basevgmsrc)/solids/VParaboloid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VParaboloid.lo -MD -MP -MF $(DEPDIR)/VParaboloid.Tpo -c -o VParaboloid.lo `test -f '$(basevgmsrc)/solids/VParaboloid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VParaboloid.cxx
	$(am__mv) $(DEPDIR)/VParaboloid.Tpo $(DEPDIR)/VParaboloid.Plo
#	source='$(basevgmsrc)/solids/VParaboloid.cxx' object='VParaboloid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VParaboloid.lo `test -f '$(basevgmsrc)/solids/VParaboloid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VParaboloid.cxx

VPolycone.lo: $(basevgmsrc)/solids/VPolycone.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VPolycone.lo -MD -MP -MF $(DEPDIR)/VPolycone.Tpo -c -o VPolycone.lo `test -f '$(basevgmsrc)/solids/VPolycone.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VPolycone.cxx
	$(am__mv) $(DEPDIR)/VPolycone.Tpo $(DEPDIR)/VPolycone.Plo
#	source='$(basevgmsrc)/solids/VPolycone.cxx' object='VPolycone.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VPolycone.lo `test -f '$(basevgmsrc)/solids/VPolycone.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VPolycone.cxx

VPolyhedra.lo: $(basevgmsrc)/solids/VPolyhedra.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VPolyhedra.lo -MD -MP -MF $(DEPDIR)/VPolyhedra.Tpo -c -o VPolyhedra.lo `test -f '$(basevgmsrc)/solids/VPolyhedra.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VPolyhedra.cxx
	$(am__mv) $(DEPDIR)/VPolyhedra.Tpo $(DEPDIR)/VPolyhedra.Plo
#	source='$(basevgmsrc)/solids/VPolyhedra.cxx' object='VPolyhedra.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VPolyhedra.lo `test -f '$(basevgmsrc)/solids/VPolyhedra.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VPolyhedra.cxx

VSphere.lo: $(basevgmsrc)/solids/VSphere.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VSphere.lo -MD -MP -MF $(DEPDIR)/VSphere.Tpo -c -o VSphere.lo `test -f '$(basevgmsrc)/solids/VSphere.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VSphere.cxx
	$(am__mv) $(DEPDIR)/VSphere.Tpo $(DEPDIR)/VSphere.Plo
#	source='$(basevgmsrc)/solids/VSphere.cxx' object='VSphere.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VSphere.lo `test -f '$(basevgmsrc)/solids/VSphere.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VSphere.cxx

VTessellatedSolid.lo: $(basevgmsrc)/solids/VTessellatedSolid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VTessellatedSolid.lo -MD -MP -MF $(DEPDIR)/VTessellatedSolid.Tpo -c -o VTessellatedSolid.lo `test -f '$(basevgmsrc)/solids/VTessellatedSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTessellatedSolid.cxx
	$(am__mv) $(DEPDIR)/VTessellatedSolid.Tpo $(DEPDIR)/VTessellatedSolid.Plo
#	source='$(basevgmsrc)/solids/VTessellatedSolid.cxx' object='VTessellatedSolid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VTessellatedSolid.lo `test -f '$(basevgmsrc)/solids/VTessellatedSolid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTessellatedSolid.cxx

VTorus.lo: $(basevgmsrc)/solids/VTorus.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VTorus.lo -MD -MP -MF $(DEPDIR)/VTorus.Tpo -c -o VTorus.lo `test -f '$(basevgmsrc)/solids/VTorus.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTorus.cxx
	$(am__mv) $(DEPDIR)/VTorus.Tpo $(DEPDIR)/VTorus.Plo
#	source='$(basevgmsrc)/solids/VTorus.cxx' object='VTorus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VTorus.lo `test -f '$(basevgmsrc)/solids/VTorus.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTorus.cxx

VTrap.lo: $(basevgmsrc)/solids/VTrap.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VTrap.lo -MD -MP -MF $(DEPDIR)/VTrap.Tpo -c -o VTrap.lo `test -f '$(basevgmsrc)/solids/VTrap.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTrap.cxx
	$(am__mv) $(DEPDIR)/VTrap.Tpo $(DEPDIR)/VTrap.Plo
#	source='$(basevgmsrc)/solids/VTrap.cxx' object='VTrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VTrap.lo `test -f '$(basevgmsrc)/solids/VTrap.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTrap.cxx

VTrd.lo: $(basevgmsrc)/solids/VTrd.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VTrd.lo -MD -MP -MF $(DEPDIR)/VTrd.Tpo -c -o VTrd.lo `test -f '$(basevgmsrc)/solids/VTrd.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTrd.cxx
	$(am__mv) $(DEPDIR)/VTrd.Tpo $(DEPDIR)/VTrd.Plo
#	source='$(basevgmsrc)/solids/VTrd.cxx' object='VTrd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VTrd.lo `test -f '$(basevgmsrc)/solids/VTrd.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTrd.cxx

VTubs.lo: $(basevgmsrc)/solids/VTubs.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VTubs.lo -MD -MP -MF $(DEPDIR)/VTubs.Tpo -c -o VTubs.lo `test -f '$(basevgmsrc)/solids/VTubs.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTubs.cxx
	$(am__mv) $(DEPDIR)/VTubs.Tpo $(DEPDIR)/VTubs.Plo
#	source='$(basevgmsrc)/solids/VTubs.cxx' object='VTubs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VTubs.lo `test -f '$(basevgmsrc)/solids/VTubs.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/VTubs.cxx

solid.lo: $(basevgmsrc)/solids/solid.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solid.lo -MD -MP -MF $(DEPDIR)/solid.Tpo -c -o solid.lo `test -f '$(basevgmsrc)/solids/solid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/solid.cxx
	$(am__mv) $(DEPDIR)/solid.Tpo $(DEPDIR)/solid.Plo
#	source='$(basevgmsrc)/solids/solid.cxx' object='solid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solid.lo `test -f '$(basevgmsrc)/solids/solid.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/solids/solid.cxx

VFactory.lo: $(basevgmsrc)/volumes/VFactory.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VFactory.lo -MD -MP -MF $(DEPDIR)/VFactory.Tpo -c -o VFactory.lo `test -f '$(basevgmsrc)/volumes/VFactory.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/volumes/VFactory.cxx
	$(am__mv) $(DEPDIR)/VFactory.Tpo $(DEPDIR)/VFactory.Plo
#	source='$(basevgmsrc)/volumes/VFactory.cxx' object='VFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VFactory.lo `test -f '$(basevgmsrc)/volumes/VFactory.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/volumes/VFactory.cxx

VPlacement.lo: $(basevgmsrc)/volumes/VPlacement.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VPlacement.lo -MD -MP -MF $(DEPDIR)/VPlacement.Tpo -c -o VPlacement.lo `test -f '$(basevgmsrc)/volumes/VPlacement.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/volumes/VPlacement.cxx
	$(am__mv) $(DEPDIR)/VPlacement.Tpo $(DEPDIR)/VPlacement.Plo
#	source='$(basevgmsrc)/volumes/VPlacement.cxx' object='VPlacement.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VPlacement.lo `test -f '$(basevgmsrc)/volumes/VPlacement.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/volumes/VPlacement.cxx

VVolume.lo: $(basevgmsrc)/volumes/VVolume.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VVolume.lo -MD -MP -MF $(DEPDIR)/VVolume.Tpo -c -o VVolume.lo `test -f '$(basevgmsrc)/volumes/VVolume.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/volumes/VVolume.cxx
	$(am__mv) $(DEPDIR)/VVolume.Tpo $(DEPDIR)/VVolume.Plo
#	source='$(basevgmsrc)/volumes/VVolume.cxx' object='VVolume.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VVolume.lo `test -f '$(basevgmsrc)/volumes/VVolume.cxx' || echo '$(srcdir)/'`$(basevgmsrc)/volumes/VVolume.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-basevgmcomincHEADERS: $(basevgmcominc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(basevgmcomincdir)" || $(MKDIR_P) "$(DESTDIR)$(basevgmcomincdir)"
	@list='$(basevgmcominc_HEADERS)'; test -n "$(basevgmcomincdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(basevgmcomincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(basevgmcomincdir)" || exit $$?; \
	done

uninstall-basevgmcomincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(basevgmcominc_HEADERS)'; test -n "$(basevgmcomincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(basevgmcomincdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(basevgmcomincdir)" && rm -f $$files
install-basevgmmatincHEADERS: $(basevgmmatinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(basevgmmatincdir)" || $(MKDIR_P) "$(DESTDIR)$(basevgmmatincdir)"
	@list='$(basevgmmatinc_HEADERS)'; test -n "$(basevgmmatincdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(basevgmmatincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(basevgmmatincdir)" || exit $$?; \
	done

uninstall-basevgmmatincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(basevgmmatinc_HEADERS)'; test -n "$(basevgmmatincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(basevgmmatincdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(basevgmmatincdir)" && rm -f $$files
install-basevgmsolincHEADERS: $(basevgmsolinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(basevgmsolincdir)" || $(MKDIR_P) "$(DESTDIR)$(basevgmsolincdir)"
	@list='$(basevgmsolinc_HEADERS)'; test -n "$(basevgmsolincdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(basevgmsolincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(basevgmsolincdir)" || exit $$?; \
	done

uninstall-basevgmsolincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(basevgmsolinc_HEADERS)'; test -n "$(basevgmsolincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(basevgmsolincdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(basevgmsolincdir)" && rm -f $$files
install-basevgmvolincHEADERS: $(basevgmvolinc_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(basevgmvolincdir)" || $(MKDIR_P) "$(DESTDIR)$(basevgmvolincdir)"
	@list='$(basevgmvolinc_HEADERS)'; test -n "$(basevgmvolincdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(basevgmvolincdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(basevgmvolincdir)" || exit $$?; \
	done

uninstall-basevgmvolincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(basevgmvolinc_HEADERS)'; test -n "$(basevgmvolincdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(basevgmvolincdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(basevgmvolincdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(basevgmcomincdir)" "$(DESTDIR)$(basevgmmatincdir)" "$(DESTDIR)$(basevgmsolincdir)" "$(DESTDIR)$(basevgmvolincdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-basevgmcomincHEADERS \
	install-basevgmmatincHEADERS install-basevgmsolincHEADERS \
	install-basevgmvolincHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-basevgmcomincHEADERS \
	uninstall-basevgmmatincHEADERS uninstall-basevgmsolincHEADERS \
	uninstall-basevgmvolincHEADERS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-basevgmcomincHEADERS \
	install-basevgmmatincHEADERS install-basevgmsolincHEADERS \
	install-basevgmvolincHEADERS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-basevgmcomincHEADERS \
	uninstall-basevgmmatincHEADERS uninstall-basevgmsolincHEADERS \
	uninstall-basevgmvolincHEADERS uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
